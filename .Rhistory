find.package("devtools")
install.packages("devtools")
find.package("devtools")
library(devtools)
find.package("devtools")
install.packages("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
find.package("kernsmooth r")
find.package("kernsmoothr")
find.package("kernsmooth")
install.packages("kernsmooth")
install.packages("KernSmooth")
find.package("KernSmooth")
library(KernSmooth)
above <- function(x,n){}
above <- function(x,n){
above <- function(x,n){
result <- x > n
x[result]
}
x <- 1:20
above(x,15)
help(mean)
columnMeans <- function(x, removeNA = TRUE){
nc <- ncol(x)
}
columnMeans <- function(x, removeNA = TRUE){
nc <- ncol(x)
for(i in 1:nc){
means <- mean(x[,i])
}
means
}
columnMeans(airquality)
columnMeans(airquality,FALSE)
columnMeans <- function(x, removeNA = TRUE){
nc <- ncol(x)
for(i in 1:nc){
means[i] <- mean(x[,i])
}
means
}
columnMeans(airquality)
columnMeans <- function(x, removeNA = TRUE){
nc <- ncol(x)
means <- nc
for(i in 1:nc){
means[i] <- mean(x[,i])
}
means
}
columnMeans(airquality)
formals(columnMeans)
help(function)
help(function())
help(columnMeans)
help(paste)
help(lm)
y <- 10
f <- function(x){
y <- 2
y^2 + g(x)
}
g <- function(x){
x*y
}
f(3)
x <- as.date("1970-01-01")
x <- as.Date("1970-01-01")
x
x <- Sys.time()
x
x <- 1-
x <- 10
x <- 1:10
if(x >5){
x <- 0
}
f <- function(x){
g <- function(y){
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
setwd("~/RProgWD")
source(ProgrammingAssignment2/cachematrix.R)
source(/ProgrammingAssignment2/cachematrix.R)
setwd("~/RProgWD/ProgrammingAssignment2")
source(cachematrix.R)
source(cachematrix)
source("cachematrix.R)
source("cachematrix.R")
mat <- matrix(1:6, nrow = 3, ncol = 2)
x <- makeCacheMatrix(mat)
x$get()
x$getInverse()
cacheSolve(x)
mat <- matrix(1:4, nrow = 2, ncol = 2)
x <- makeCacheMatrix(mat)
x$get()
x$getInverse()
cacheSolve(x)
cacheSolve(x)
x$set()
mat <- matrix(8:11, nrow = 2, ncol = 2)
x$set()
x$set(mat)
x$get()
cacheSolve(x)
cacheSolve(x)
